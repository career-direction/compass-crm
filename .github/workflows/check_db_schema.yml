# name: Check Schema Drift (dev vs schema.prisma)

# on:
#   pull_request:
#     branches: [ main ]
#     paths:
#       - "prisma/**"
#   workflow_dispatch:

# jobs:
#   schema-drift:
#     runs-on: ubuntu-latest
#     env:
#       # Supabase(dev) の接続文字列をSecretsに入れておく
#       REMOTE_DB_URL: ${{ secrets.SUPABASE_DEVELOPMENT_DB_URL }}

#     steps:
#       - uses: actions/checkout@v4

#       - uses: actions/setup-node@v4
#         with:
#           node-version: 20
#           cache: npm

#       - run: npm ci
#       - run: npx prisma generate

#       - name: Check TCP reachability
#         run: |
#           sudo apt-get update && sudo apt-get install -y postgresql-client netcat-openbsd
#           # 1) TCP到達性
#           nc -vz $(echo $REMOTE_DB_URL | sed -E 's#.*/\\/(.*)\\?.*#\\1#' | awk -F'@' '{print $2}' | awk -F':' '{print $1}') 5432 || true
#           # 2) pg_isready（SSL必須）
#           pg_isready -d "$REMOTE_DB_URL" || true
#           # 3) 実接続
#           psql "$REMOTE_DB_URL" -c '\conninfo'

#       # remote(dev) -> schema.prisma への変換SQLを出力
#       - name: Compute diff (remote dev -> local schema.prisma)
#         run: |
#           npx prisma migrate diff \
#             --from-url "$REMOTE_DB_URL" \
#             --to-schema-datamodel ./prisma/schema.prisma \
#             --script > schema_diff.sql
#           # ファイルが空でなければ差分ありとして失敗させる
#           if [ -s schema_diff.sql ]; then
#             echo "❌ Schema drift detected between dev DB and schema.prisma"
#             exit 1
#           else
#             echo "✅ No drift: dev DB matches schema.prisma"
#           fi
